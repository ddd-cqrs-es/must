<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arg_ArrayPlusOffTooSmall" xml:space="preserve">
    <value>Destination array is not long enough to copy all the items in the collection. Check array index and length.</value>
  </data>
  <data name="Arg_IndexOutOfRange" xml:space="preserve">
    <value>index is outside the range of valid indexes for array.</value>
  </data>
  <data name="Arg_OutOfRange" xml:space="preserve">
    <value>Not a valid value.</value>
  </data>
  <data name="Arg_RangeNotBetween" xml:space="preserve">
    <value>The range of valid values are {0} to {1}.</value>
  </data>
  <data name="Argument_AddingDuplicate" xml:space="preserve">
    <value>An entry with the same key already exists.</value>
  </data>
  <data name="ArgumentNull_Any" xml:space="preserve">
    <value>One of the specified arguments is a null reference.</value>
  </data>
  <data name="Argument_ArrayPlusOffTooSmall" xml:space="preserve">
    <value>Attempting to specify count and offset past end of array.</value>
  </data>
  <data name="Argument_Empty" xml:space="preserve">
    <value>{0} is empty.</value>
  </data>
  <data name="Argument_InvalidOfLen" xml:space="preserve">
    <value>Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.</value>
  </data>
  <data name="ArgumentOutOfRange_Index" xml:space="preserve">
    <value>Index was out of range. Must be non-negative and less than the size of the collection.
</value>
  </data>
  <data name="Auth_Config_InvalidModuleType" xml:space="preserve">
    <value>The type "{0}" is not valid or it was not correctly specified.</value>
  </data>
  <data name="Auth_Config_Missing_ControlFlag" xml:space="preserve">
    <value>Control flag was not defined</value>
  </data>
  <data name="Auth_Config_Missing_LoginModuleType" xml:space="preserve">
    <value>Type was not defined</value>
  </data>
  <data name="Auth_LoginMudule_Type" xml:space="preserve">
    <value>A instance of the login module type {0} could not be created.</value>
  </data>
  <data name="Caching_Invalid_expiration_combination" xml:space="preserve">
    <value>absoluteExpiration must be DateTime.MaxValue or slidingExpiration must be timeSpan.Zero.</value>
  </data>
  <data name="Collection_AddingDuplicate" xml:space="preserve">
    <value>The element {0} is already in collection.</value>
  </data>
  <data name="Collection_null" xml:space="preserve">
    <value>The specified collection is a null reference.</value>
  </data>
  <data name="Configuration_ArgOutOfRange" xml:space="preserve">
    <value>{0} is not a valid value for {1}.</value>
  </data>
  <data name="Configuration_InvalidFormat" xml:space="preserve">
    <value>The file {0} does not represent a valid configuration file.</value>
  </data>
  <data name="Config_KeyNotFound" xml:space="preserve">
    <value>The configuration key "{0}" was not found.</value>
  </data>
  <data name="Configuration_Missing" xml:space="preserve">
    <value>Missing configuration information for "{0}" at "{1}".</value>
  </data>
  <data name="Arg_PathNotRooted" xml:space="preserve">
    <value>The path {0} is not rooted.</value>
  </data>
  <data name="Arg_PathRooted" xml:space="preserve">
    <value>The "{0}" path must be relative to the application base directory.</value>
  </data>
  <data name="DataProvider_Connection" xml:space="preserve">
    <value>An IDbConnection instance could not be created. Verify if your connection string is valid and if your data source type was correctly specified.</value>
  </data>
  <data name="DataProvider_ConnectionString" xml:space="preserve">
    <value>An invalid connection string argument has been supplied, or a required connection string argument has not been supplied.</value>
  </data>
  <data name="DataProvider_InvalidProvider" xml:space="preserve">
    <value>The Provider is invalid.</value>
  </data>
  <data name="Format_SyntaxError" xml:space="preserve">
    <value>Syntax error</value>
  </data>
  <data name="InvalidOperation_EmptyQueue" xml:space="preserve">
    <value>Queue is empty.</value>
  </data>
  <data name="InvalidOperation_FullQueue" xml:space="preserve">
    <value>Queue is full.</value>
  </data>
  <data name="JSON_BadRootElementType" xml:space="preserve">
    <value>Root value must be an array or object.</value>
  </data>
  <data name="JSON_InvalidEscape" xml:space="preserve">
    <value>Invalid escape sequence at "{0}".</value>
  </data>
  <data name="InvalidOperation_TooMuchNesting" xml:space="preserve">
    <value>Too much nesting.</value>
  </data>
  <data name="InvalidOperation_json_TrailingComma" xml:space="preserve">
    <value>Trailing comma not allowed at "{0}".</value>
  </data>
  <data name="InvalidOperation_json_UnexpectedDataAfterRoot" xml:space="preserve">
    <value>Unexpected data after root element.</value>
  </data>
  <data name="InvalidOperation_json_UnquotedDictionaryKey" xml:space="preserve">
    <value>Dictionary keys must be quoted at "{0}".</value>
  </data>
  <data name="Provider_Attributes" xml:space="preserve">
    <value>An invalid collection of attributes has been supplied, or a required attribute has not been supplied.</value>
  </data>
  <data name="Provider_LoadAssembly" xml:space="preserve">
    <value>The assembly could not be loaded. {0}.</value>
  </data>
  <data name="Provider_Option_MissingAt" xml:space="preserve">
    <value>Missing required option "{0}" for provider.</value>
  </data>
  <data name="TypeLoad_CreateInstance" xml:space="preserve">
    <value>Cannot create an instance of the type "{0}", because:
</value>
  </data>
  <data name="SkipList_BadArrayCopyTo" xml:space="preserve">
    <value>An attempt was made to copy the value elements of a SkipList to an array that is too small.</value>
  </data>
  <data name="SkipList_BadEnumAccess" xml:space="preserve">
    <value>An attempt was made to access a SkipListEnumerator that is positioned before the first element of a SkipList or after the last element.</value>
  </data>
  <data name="SkipList_BadIndexCopyTo" xml:space="preserve">
    <value>An attempt was made to pass an out of range index to the CopyTo method of a SkipList.</value>
  </data>
  <data name="SkipList_ComparableError" xml:space="preserve">
    <value>The SkipList was set to use the IComparable interface and an attempt was made to add a key that does not support this interface.</value>
  </data>
  <data name="SkipList_InvalidEnum" xml:space="preserve">
    <value>SkipListEnumerator is no longer valid. The SkipList has been modified since the creation of this enumerator.</value>
  </data>
  <data name="SkipList_KeyExistsAdd" xml:space="preserve">
    <value>An attempt was made to add an element in which the key of the element already exists in the SkipList.</value>
  </data>
  <data name="SkipList_NullArrayCopyTo" xml:space="preserve">
    <value>An attempt was made to pass a null array to the CopyTo method of a SkipList.</value>
  </data>
  <data name="SkipList_NullKey" xml:space="preserve">
    <value>An attempt was made to pass a null key to a SkipList.</value>
  </data>
  <data name="Type_InvalidCastException" xml:space="preserve">
    <value>Unable to cast object of type "{0}" to type "{1}".</value>
  </data>
  <data name="Argument_EmptyString" xml:space="preserve">
    <value>The {0} arugment could not be an empty string.</value>
  </data>
  <data name="Argument_EmptyStringOrSpaceSequence" xml:space="preserve">
    <value>The {0} arugment could not be an empty string or a sequence of spaces.</value>
  </data>
  <data name="Arg_KeyNotFound" xml:space="preserve">
    <value>The key {0} was not found.</value>
  </data>
  <data name="Provider_AssemblyNotSpecified" xml:space="preserve">
    <value>The name of the assembly was not specified.</value>
  </data>
  <data name="Login_LogoutFails" xml:space="preserve">
    <value>Logout has been failedfor module {0}.</value>
  </data>
  <data name="Log_MethodThrowsException" xml:space="preserve">
    <value>The {0} method of {1} throws an exception.</value>
  </data>
  <data name="Log_ThrowsException" xml:space="preserve">
    <value>{0} throws an exception.</value>
  </data>
  <data name="InvalidCast_FromTo" xml:space="preserve">
    <value>Invalid cast from {0} to {1}.</value>
  </data>
  <data name="Argument_ArrayLengthMismatch" xml:space="preserve">
    <value>The number of elements of the array {0} is less than the number of elements of the array {1}.</value>
  </data>
  <data name="Configuration_MissingNode" xml:space="preserve">
    <value>The configuration node {0} is not defined.</value>
  </data>
  <data name="Arg_WrongType" xml:space="preserve">
    <value>{0} should be of type {1}.</value>
  </data>
  <data name="Arg_ArrayLengthDifferFrom" xml:space="preserve">
    <value>The length of the array "{0}" should be equals to the length of "{1}".</value>
  </data>
  <data name="Arg_ArrayLengthsDiffer" xml:space="preserve">
    <value>Array lengths must be the same.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedNonNegNum" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
  <data name="Argument_CollectionNoNulls" xml:space="preserve">
    <value>{0} cannot contain null elements.</value>
  </data>
  <data name="NotSupported_CannotCreateType" xml:space="preserve">
    <value>This method cannot be used to create types related to {0}.</value>
  </data>
  <data name="Argument_AddingDuplicateKey" xml:space="preserve">
    <value>An entry with the same key already exists. Key:{0}.</value>
  </data>
  <data name="Switches_MissingSwitch" xml:space="preserve">
    <value>Missing required switch "{0}".</value>
  </data>
  <data name="Configuration_providers_missing_reference" xml:space="preserve">
    <value>The options for the provider "{0}" contains references that cannot be resolved.</value>
  </data>
  <data name="Configuration_providers_unresolved_reference" xml:space="preserve">
    <value>The options reference "{0}" could not be resolved.</value>
  </data>
  <data name="Arg_Type_ShouldBeInterface" xml:space="preserve">
    <value>"{0}" should be an interface.</value>
  </data>
  <data name="ArgumentOutOfRange_arg_NonMultipleOf" xml:space="preserve">
    <value>"{0}" should be a multiple of "{1}".</value>
  </data>
  <data name="ArgumentOutOfRange_arg_NonNegNum" xml:space="preserve">
    <value>"{0}" should be a non-negative number.</value>
  </data>
  <data name="DataProvider_TransactionContextRace" xml:space="preserve">
    <value>{0} =&gt; The current transaction context is not compatible with this class.</value>
  </data>
  <data name="DataProvider_InvalidOperation_TransactionCompleted" xml:space="preserve">
    <value>This operation is not permitted when the transaction is in completed.</value>
  </data>
  <data name="DataProvider_InvalidOperation_NoTransaction" xml:space="preserve">
    <value>There is no transaction in progress.</value>
  </data>
  <data name="InvalidOperation_CalledMoreThanOnce" xml:space="preserve">
    <value>This method has already been called once.</value>
  </data>
  <data name="Arg_TransactionContext_Command_Connection" xml:space="preserve">
    <value>The connection that is associated with the specified command should be the same as the specified in the context constructor.</value>
  </data>
  <data name="TypeLoad_DefaultConstructorNotFound" xml:space="preserve">
    <value>The default constructor was not found.</value>
  </data>
  <data name="TypeLoad_MissingConstructor" xml:space="preserve">
    <value>A constructor with the following signature .ctor({0}) was not found.</value>
  </data>
  <data name="TypeLoad_TypeNotFound" xml:space="preserve">
    <value>The type was not found.</value>
  </data>
  <data name="Configuration_providers_inexistent_replicas_group" xml:space="preserve">
    <value>A replica could not be created because the group "{0}" does not exist.</value>
  </data>
  <data name="Configuration_providers_replicas_with_ref_options" xml:space="preserve">
    <value>Replica nodes could not have a option that references another option.
Remove any option that has the following pattern &lt;option ref=""/&gt;</value>
  </data>
  <data name="Mappers_CannotMapInterfaces" xml:space="preserve">
    <value>We cannot map the [{0}] interface directly.
You should define a factory to create an instance of the interface using the SetFactory method.</value>
  </data>
</root>